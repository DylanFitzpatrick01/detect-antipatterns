14: 
15:     std::mutex mDataAccess1;  
    ^ --------In 'cpp_tests/public.cpp', starting at (15, 5)--------
      Are you sure you want to have a public mutex called 'mDataAccess1'?
      Consider making this mutex private.16:     std::string mDataAccess2; 

36: 
37:      std::mutex mDataAccess5; 
    ^ --------In 'cpp_tests/public.cpp', starting at (37, 6)--------
      Are you sure you want to have a public mutex called 'mDataAccess5'?
      Consider making this mutex private.38: 

47: int main()
48: {
49:     auto instance = MyClass();
50: 
51:     std::cout << instance.getState() << ;                  
52: 
53:     instance.mDataAccess1.lock();                               
54: }
    ^ --------In 'cpp_tests/public.cpp', starting at (48, 1)--------
      A manual lock is used in this scope without an unlock!.
      Please either replace 'mDataAccess1.lock();' with 'std::lock_guard<std::mutex> lock(mDataAccess1);' (RECCOMMENDED),
      or add 'mDataAccess1.unlock();' at the end of this critical section.
